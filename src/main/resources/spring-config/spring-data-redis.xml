<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	">


	<!-- jedis pool配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.jedisPool.maxTotal}" />
		<property name="maxIdle" value="${redis.jedisPool.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.jedisPool.maxWaitMillis}" />
		<!-- <property name="testOnBorrow" value="${redis.jedisPool.testOnBorrow}" 
			/> -->
	</bean>


	<!-- 配置参数待统一抽取到properties配置文件 -->
	<!--集群配置 在集群环境时切换为集群配置 。 集群配置下不能连接单个未配置集群的服务节点，所以不能统一配置，如果要统一配置，可以使用单机redis集群 
		节点数不确定的情况下，
		1 第一种配置方式  测试基本可行，正式实施时进行详细测试
	<bean id="redisClusterConfiguration"
		class="org.springframework.data.redis.connection.RedisClusterConfiguration">
		<constructor-arg  value="#{${redis.cluster.hostAndPorts}}">
		</constructor-arg>
		<property name="maxRedirects" value="${redis.cluster.maxRedirects}"/>
	</bean>
		<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg index="0" ref="redisClusterConfiguration" />
		<constructor-arg index="1" ref="jedisPoolConfig" />
	</bean>
	-->
	<!--
	2 第二种配置方式（只适合固定节点） 未添加到配置文件 已测试可行
	<bean id="redisClusterConfiguration"
		class="org.springframework.data.redis.connection.RedisClusterConfiguration">
		<constructor-arg>
			<list>
				<value>192.168.56.101:6381</value>
				<value>192.168.56.102:6381</value>
				<value>192.168.56.103:6381</value>
			</list>
		</constructor-arg>
	</bean>
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg index="0" ref="redisClusterConfiguration" />
		<constructor-arg index="1" ref="jedisPoolConfig" />
	</bean>
	 -->
	
	
	<!--单机配置-->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="usePool" value="${redis.single.usePool}" />
		<property name="hostName" value="${redis.single.hostName}" />
		<property name="port" value="${redis.single.port}" />
		<property name="password" value="${redis.single.password}" />
		<property name="timeout" value="${redis.single.timeout}" />
		<property name="database" value="${redis.single.database}" />
		<constructor-arg index="0" ref="jedisPoolConfig" />
	</bean>
 


	<!--配置key的序列化方式 -->
	<bean id="keySerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer" />

	<bean id="valueSerializer"
		class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
	<!-- Redis Template -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<!--配置key的序列化方式 -->
		<property name="keySerializer" ref="keySerializer" />
		<!--配置value的序列化方式 -->
		<property name="valueSerializer" ref="valueSerializer" />
		<!--配置是否启用事务，默认false -->
		<!--<property name="enableTransactionSupport" value="true" /> -->
	</bean>
	
	<!--给springRedisService服务注入redisTemplate  -->
	<bean id="springRedisService" class="com.joyintech.redis.SpringRedisServiceImpl" >  
		<property name="redisTemplate"   ref="redisTemplate" />  
	</bean>

	<!-- jedisCluster配置 -->
	<!--<bean id="jedisCluster" class="redis.clients.jedis.JedisCluster"> -->
	<!--<constructor-arg index="0"> -->
	<!--<set> -->
	<!--<bean class="redis.clients.jedis.HostAndPort"> -->
	<!--<constructor-arg type="String" value="${redis.host1}"/> -->
	<!--<constructor-arg type="int" value="${redis.port1}"/> -->
	<!--</bean> -->
	<!--<bean class="redis.clients.jedis.HostAndPort"> -->
	<!--<constructor-arg type="String" value="${redis.host2}"/> -->
	<!--<constructor-arg type="int" value="${redis.port2}"/> -->
	<!--</bean> -->
	<!--</set> -->
	<!--</constructor-arg> -->
	<!--&lt;!&ndash; <constructor-arg index="1" ><value type="int">1</value></constructor-arg>&ndash;&gt; -->
	<!--<constructor-arg index="1" ref="jedisPoolConfig"/> -->
	<!--</bean> -->

</beans>